/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 07 10:20:38 GMT 2024
 */

package org.example.sorting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.sorting.MergeSort;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MergeSort_ESTest extends MergeSort_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[2] = 10;
      intArray0[3] = 74;
      MergeSort.sort(intArray0, 5);
      assertArrayEquals(new int[] {0, 0, 0, 10, 74, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = (-697);
      // Undeclared exception!
      try { 
        MergeSort.merge(intArray0, intArray0, intArray0, 39, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.example.sorting.MergeSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        MergeSort.merge(intArray0, intArray0, intArray0, 2108, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.example.sorting.MergeSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        MergeSort.sort((int[]) null, 4875);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.sorting.MergeSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        MergeSort.sort(intArray0, 1556);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.example.sorting.MergeSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try { 
        MergeSort.merge(intArray0, (int[]) null, intArray0, 2, 232);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.sorting.MergeSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        MergeSort.merge(intArray0, intArray0, intArray0, 0, 1018);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.example.sorting.MergeSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[2] = 1;
      // Undeclared exception!
      try { 
        MergeSort.merge(intArray0, intArray0, intArray0, 39, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.example.sorting.MergeSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MergeSort.merge((int[]) null, (int[]) null, (int[]) null, (-2178), (-2178));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[4];
      MergeSort.sort(intArray0, 1);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[63];
      intArray0[1] = 14;
      MergeSort.sort(intArray0, 14);
      assertEquals(63, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MergeSort mergeSort0 = new MergeSort();
  }
}
